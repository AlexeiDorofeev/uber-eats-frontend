[{"C:\\devel\\uber eat\\uber-eats-frontend\\src\\App.tsx":"1","C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx":"2","C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts":"3","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts":"5","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx":"8","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx":"10","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\loginMutation.ts":"11","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"12","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"13","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx":"14","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx":"15","C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"16","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"17","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts":"18","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"19"},{"size":413,"mtime":1608839931699,"results":"20","hashOfConfig":"21"},{"size":755,"mtime":1608922052229,"results":"22","hashOfConfig":"21"},{"size":425,"mtime":1608824550492,"results":"23","hashOfConfig":"21"},{"size":588,"mtime":1608929267108,"results":"24","hashOfConfig":"21"},{"size":1026,"mtime":1608927178432,"results":"25","hashOfConfig":"21"},{"size":1192,"mtime":1608981576586,"results":"26","hashOfConfig":"21"},{"size":3893,"mtime":1608921961020,"results":"27","hashOfConfig":"21"},{"size":4409,"mtime":1608928779108,"results":"28","hashOfConfig":"21"},{"size":238,"mtime":1608852300838,"results":"29","hashOfConfig":"21"},{"size":514,"mtime":1608894062481,"results":"30","hashOfConfig":"21"},{"size":597,"mtime":1608893931492,"results":"31","hashOfConfig":"21"},{"size":916,"mtime":1608996000035,"results":"32","hashOfConfig":"21"},{"size":2583,"mtime":1609025354389,"results":"33","hashOfConfig":"21"},{"size":600,"mtime":1608995256826,"results":"34","hashOfConfig":"21"},{"size":1041,"mtime":1608988055009,"results":"35","hashOfConfig":"21"},{"size":298,"mtime":1608933786460,"results":"36","hashOfConfig":"21"},{"size":1766,"mtime":1608995285615,"results":"37","hashOfConfig":"21"},{"size":44,"mtime":1608921491735,"results":"38","hashOfConfig":"21"},{"size":2986,"mtime":1608995300885,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18vmfy9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\devel\\uber eat\\uber-eats-frontend\\src\\App.tsx",[],["84","85"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts",[],["86","87"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts",[],["88","89"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],["90","91"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx",["92","93"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authToken, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: Logininput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authToken(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: { loginInput: { email, password } },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Login\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Uber?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/create-account\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx",["94","95","96","97"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    watch,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: { createAccountInput: { email, password, role } },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>CreateAccount | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\loginMutation.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["98","99"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":84,"column":34,"nodeType":"114","messageId":"115","endLine":84,"endColumn":35,"suggestions":"116"},{"ruleId":"112","severity":1,"message":"113","line":84,"column":59,"nodeType":"114","messageId":"115","endLine":84,"endColumn":60,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":34,"column":5,"nodeType":"120","messageId":"121","endLine":34,"endColumn":10},{"ruleId":"118","severity":1,"message":"122","line":46,"column":28,"nodeType":"120","messageId":"121","endLine":46,"endColumn":33},{"ruleId":"112","severity":1,"message":"113","line":86,"column":34,"nodeType":"114","messageId":"115","endLine":86,"endColumn":35,"suggestions":"123"},{"ruleId":"112","severity":1,"message":"113","line":86,"column":59,"nodeType":"114","messageId":"115","endLine":86,"endColumn":60,"suggestions":"124"},{"ruleId":"118","severity":1,"message":"125","line":48,"column":12,"nodeType":"120","messageId":"121","endLine":48,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":56,"column":6,"nodeType":"128","endLine":56,"endColumn":8,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"113","line":89,"column":32,"nodeType":"114","messageId":"115","endLine":89,"endColumn":33,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"113","line":89,"column":57,"nodeType":"114","messageId":"115","endLine":89,"endColumn":58,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],["132"],["133"],["132"],["133"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["134","135"],["136","137"],"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["138","139"],["140","141"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["142"],["143","144"],["145","146"],"no-global-assign","no-unsafe-negation",{"messageId":"147","fix":"148","desc":"149"},{"messageId":"150","fix":"151","desc":"152"},{"messageId":"147","fix":"153","desc":"149"},{"messageId":"150","fix":"154","desc":"152"},{"messageId":"147","fix":"155","desc":"149"},{"messageId":"150","fix":"156","desc":"152"},{"messageId":"147","fix":"157","desc":"149"},{"messageId":"150","fix":"158","desc":"152"},{"desc":"159","fix":"160"},{"messageId":"147","fix":"161","desc":"149"},{"messageId":"150","fix":"162","desc":"152"},{"messageId":"147","fix":"163","desc":"149"},{"messageId":"150","fix":"164","desc":"152"},"removeEscape",{"range":"165","text":"166"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"167","text":"168"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"169","text":"166"},{"range":"170","text":"168"},{"range":"171","text":"166"},{"range":"172","text":"168"},{"range":"173","text":"166"},{"range":"174","text":"168"},"Update the dependencies array to be: [verifyEmail]",{"range":"175","text":"176"},{"range":"177","text":"166"},{"range":"178","text":"168"},{"range":"179","text":"166"},{"range":"180","text":"168"},[2285,2286],"",[2285,2285],"\\",[2310,2311],[2310,2310],[2458,2459],[2458,2458],[2483,2484],[2483,2483],[1396,1398],"[verifyEmail]",[2363,2364],[2363,2363],[2388,2389],[2388,2388]]