[{"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx":"1","C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"3","C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts":"4","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"5","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx":"6","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx":"7","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx":"8","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx":"9","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"10","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx":"11","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx":"12","C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"13","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"14","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts":"15","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"16","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx":"17","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx":"18","C:\\devel\\uber eat\\uber-eats-frontend\\src\\fragments.ts":"19","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\category.tsx":"20","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"21","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"22","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\app.tsx":"23"},{"size":770,"mtime":1609171229298,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1608824550492,"results":"26","hashOfConfig":"25"},{"size":588,"mtime":1608929267108,"results":"27","hashOfConfig":"25"},{"size":1026,"mtime":1608927178432,"results":"28","hashOfConfig":"25"},{"size":1554,"mtime":1609165834035,"results":"29","hashOfConfig":"25"},{"size":3893,"mtime":1608921961020,"results":"30","hashOfConfig":"25"},{"size":4409,"mtime":1608928779108,"results":"31","hashOfConfig":"25"},{"size":238,"mtime":1608852300838,"results":"32","hashOfConfig":"25"},{"size":514,"mtime":1608894062481,"results":"33","hashOfConfig":"25"},{"size":4388,"mtime":1609113353312,"results":"34","hashOfConfig":"25"},{"size":600,"mtime":1608995256826,"results":"35","hashOfConfig":"25"},{"size":1041,"mtime":1608988055009,"results":"36","hashOfConfig":"25"},{"size":298,"mtime":1608933786460,"results":"37","hashOfConfig":"25"},{"size":1766,"mtime":1608995285615,"results":"38","hashOfConfig":"25"},{"size":44,"mtime":1608921491735,"results":"39","hashOfConfig":"25"},{"size":2986,"mtime":1608995300885,"results":"40","hashOfConfig":"25"},{"size":708,"mtime":1609165827251,"results":"41","hashOfConfig":"25"},{"size":1326,"mtime":1609088385931,"results":"42","hashOfConfig":"25"},{"size":400,"mtime":1609110258976,"results":"43","hashOfConfig":"25"},{"size":1028,"mtime":1609114521034,"results":"44","hashOfConfig":"25"},{"size":1139,"mtime":1609166454592,"results":"45","hashOfConfig":"25"},{"size":1520,"mtime":1609169461835,"results":"46","hashOfConfig":"25"},{"size":404,"mtime":1609171185664,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18vmfy9",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts",[],["106","107"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],["108","109"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts",[],["110","111"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],["112","113"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx",["114","115"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authToken, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: Logininput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authToken(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: { loginInput: { email, password } },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Login\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Uber?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/create-account\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx",["116","117","118","119"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    watch,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: { createAccountInput: { email, password, role } },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>CreateAccount | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["120","121"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx",[],["122","123"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["124","125"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    { onCompleted }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Uber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page.\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["126","127"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const onCompleted = (data: editProfile) => {\r\n    const {\r\n      editProfile: { ok },\r\n    } = data;\r\n    if (ok && userData) {\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n      if (prevEmail !== newEmail) {\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditedUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            email: newEmail,\r\n            verified: false,\r\n          },\r\n        });\r\n        //  history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, { onCompleted });\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edir Profile | Uber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          name=\"email\"\r\n          className=\"input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          ref={register}\r\n          name=\"password\"\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Save Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx",["128","129","130","131"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [callQuery, { loading, data }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [history, location]);\r\n  return (\r\n    <h1>\r\n      <Helmet>\r\n        <title>Home | Uber Eats</title>\r\n      </Helmet>\r\n      Search Page\r\n    </h1>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\fragments.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\category.tsx",["132"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["133"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\app.tsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"134","replacedBy":"140"},{"ruleId":"136","replacedBy":"141"},{"ruleId":"134","replacedBy":"142"},{"ruleId":"136","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":84,"column":34,"nodeType":"146","messageId":"147","endLine":84,"endColumn":35,"suggestions":"148"},{"ruleId":"144","severity":1,"message":"145","line":84,"column":59,"nodeType":"146","messageId":"147","endLine":84,"endColumn":60,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":34,"column":5,"nodeType":"152","messageId":"153","endLine":34,"endColumn":10},{"ruleId":"150","severity":1,"message":"154","line":46,"column":28,"nodeType":"152","messageId":"153","endLine":46,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":86,"column":34,"nodeType":"146","messageId":"147","endLine":86,"endColumn":35,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"145","line":86,"column":59,"nodeType":"146","messageId":"147","endLine":86,"endColumn":60,"suggestions":"156"},{"ruleId":"134","replacedBy":"157"},{"ruleId":"136","replacedBy":"158"},{"ruleId":"134","replacedBy":"159"},{"ruleId":"136","replacedBy":"160"},{"ruleId":"150","severity":1,"message":"161","line":48,"column":12,"nodeType":"152","messageId":"153","endLine":48,"endColumn":13},{"ruleId":"162","severity":1,"message":"163","line":56,"column":6,"nodeType":"164","endLine":56,"endColumn":8,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"145","line":89,"column":32,"nodeType":"146","messageId":"147","endLine":89,"endColumn":33,"suggestions":"166"},{"ruleId":"144","severity":1,"message":"145","line":89,"column":57,"nodeType":"146","messageId":"147","endLine":89,"endColumn":58,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":29,"column":23,"nodeType":"152","messageId":"153","endLine":29,"endColumn":30},{"ruleId":"150","severity":1,"message":"169","line":29,"column":32,"nodeType":"152","messageId":"153","endLine":29,"endColumn":36},{"ruleId":"150","severity":1,"message":"161","line":34,"column":12,"nodeType":"152","messageId":"153","endLine":34,"endColumn":13},{"ruleId":"162","severity":1,"message":"170","line":46,"column":6,"nodeType":"164","endLine":46,"endColumn":25,"suggestions":"171"},{"ruleId":"150","severity":1,"message":"168","line":32,"column":17,"nodeType":"152","messageId":"153","endLine":32,"endColumn":24},{"ruleId":"150","severity":1,"message":"168","line":29,"column":11,"nodeType":"152","messageId":"153","endLine":29,"endColumn":18},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],["172"],["173"],["172"],["173"],["172"],["173"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["174","175"],["176","177"],"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["178","179"],["180","181"],["172"],["173"],["172"],["173"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["182"],["183","184"],["185","186"],"'loading' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.",["187"],"no-global-assign","no-unsafe-negation",{"messageId":"188","fix":"189","desc":"190"},{"messageId":"191","fix":"192","desc":"193"},{"messageId":"188","fix":"194","desc":"190"},{"messageId":"191","fix":"195","desc":"193"},{"messageId":"188","fix":"196","desc":"190"},{"messageId":"191","fix":"197","desc":"193"},{"messageId":"188","fix":"198","desc":"190"},{"messageId":"191","fix":"199","desc":"193"},{"desc":"200","fix":"201"},{"messageId":"188","fix":"202","desc":"190"},{"messageId":"191","fix":"203","desc":"193"},{"messageId":"188","fix":"204","desc":"190"},{"messageId":"191","fix":"205","desc":"193"},{"desc":"206","fix":"207"},"removeEscape",{"range":"208","text":"209"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"210","text":"211"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"212","text":"209"},{"range":"213","text":"211"},{"range":"214","text":"209"},{"range":"215","text":"211"},{"range":"216","text":"209"},{"range":"217","text":"211"},"Update the dependencies array to be: [verifyEmail]",{"range":"218","text":"219"},{"range":"220","text":"209"},{"range":"221","text":"211"},{"range":"222","text":"209"},{"range":"223","text":"211"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"224","text":"225"},[2285,2286],"",[2285,2285],"\\",[2310,2311],[2310,2310],[2458,2459],[2458,2458],[2483,2484],[2483,2483],[1396,1398],"[verifyEmail]",[2363,2364],[2363,2363],[2388,2389],[2388,2388],[1167,1186],"[callQuery, history, location]"]