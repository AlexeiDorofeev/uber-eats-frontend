[{"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx":"1","C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts":"2","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"3","C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts":"4","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"5","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx":"6","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx":"7","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx":"8","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx":"9","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"10","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx":"11","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx":"12","C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"13","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"14","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts":"15","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"16","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx":"17","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx":"18","C:\\devel\\uber eat\\uber-eats-frontend\\src\\fragments.ts":"19","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\category.tsx":"20","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx":"21","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\app.tsx":"22","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx":"23","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"24","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx":"25"},{"size":770,"mtime":1609171229298,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1608824550492,"results":"28","hashOfConfig":"27"},{"size":588,"mtime":1608929267108,"results":"29","hashOfConfig":"27"},{"size":1026,"mtime":1608927178432,"results":"30","hashOfConfig":"27"},{"size":2292,"mtime":1609367842835,"results":"31","hashOfConfig":"27"},{"size":3893,"mtime":1608921961020,"results":"32","hashOfConfig":"27"},{"size":4308,"mtime":1609244093400,"results":"33","hashOfConfig":"27"},{"size":238,"mtime":1608852300838,"results":"34","hashOfConfig":"27"},{"size":533,"mtime":1609194351539,"results":"35","hashOfConfig":"27"},{"size":4388,"mtime":1609113353312,"results":"36","hashOfConfig":"27"},{"size":600,"mtime":1608995256826,"results":"37","hashOfConfig":"27"},{"size":1041,"mtime":1608988055009,"results":"38","hashOfConfig":"27"},{"size":305,"mtime":1609182534007,"results":"39","hashOfConfig":"27"},{"size":1766,"mtime":1608995285615,"results":"40","hashOfConfig":"27"},{"size":44,"mtime":1608921491735,"results":"41","hashOfConfig":"27"},{"size":2986,"mtime":1609272176429,"results":"42","hashOfConfig":"27"},{"size":708,"mtime":1609165827251,"results":"43","hashOfConfig":"27"},{"size":1326,"mtime":1609088385931,"results":"44","hashOfConfig":"27"},{"size":400,"mtime":1609110258976,"results":"45","hashOfConfig":"27"},{"size":1028,"mtime":1609114521034,"results":"46","hashOfConfig":"27"},{"size":1498,"mtime":1609189840016,"results":"47","hashOfConfig":"27"},{"size":404,"mtime":1609171185664,"results":"48","hashOfConfig":"27"},{"size":1786,"mtime":1609360786586,"results":"49","hashOfConfig":"27"},{"size":1139,"mtime":1609359723138,"results":"50","hashOfConfig":"27"},{"size":4518,"mtime":1609367793746,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"18vmfy9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx",[],["118","119"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts",[],["120","121"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],["122","123"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts",[],["124","125"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx",["126","127"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authToken, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: Logininput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authToken(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: { loginInput: { email, password } },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Login\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Uber?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/create-account\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["128","129"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx",["130","131","132","133"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nexport const CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    watch,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"Account Created! Log in now!\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: { createAccountInput: { email, password, role } },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>CreateAccount | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",["134","135"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx",["136"],"import React from \"react\";\r\n\r\ninterface IButtonProps {\r\n  canClick: boolean;\r\n  loading: boolean;\r\n  actionText: string;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({\r\n  canClick,\r\n  loading,\r\n  actionText,\r\n}) => (\r\n  <button\r\n    role=\"button\"\r\n    className={`text-lg font-medium text-white py-4 transition-colors focus:outline-none ${\r\n      canClick\r\n        ? \"bg-lime-600 py-4 hover:bg-lime-700\"\r\n        : \"bg-gray-300 pointer-events-none \"\r\n    }`}\r\n  >\r\n    {loading ? \"Loading...\" : actionText}\r\n  </button>\r\n);\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["137","138"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  verifyEmail,\r\n  verifyEmailVariables,\r\n} from \"../../__generated__/verifyEmail\";\r\n\r\nconst VERIFY_EMAIL_MUTATION = gql`\r\n  mutation verifyEmail($input: VerifyEmailInput!) {\r\n    verifyEmail(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ConfirmEmail = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const history = useHistory();\r\n  const onCompleted = (data: verifyEmail) => {\r\n    const {\r\n      verifyEmail: { ok },\r\n    } = data;\r\n    if (ok && userData?.me.id) {\r\n      client.writeFragment({\r\n        id: `User:${userData.me.id}`,\r\n        fragment: gql`\r\n          fragment VerifiedUser on User {\r\n            verified\r\n          }\r\n        `,\r\n        data: {\r\n          verified: true,\r\n        },\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [verifyEmail] = useMutation<verifyEmail, verifyEmailVariables>(\r\n    VERIFY_EMAIL_MUTATION,\r\n    { onCompleted }\r\n  );\r\n  useEffect(() => {\r\n    const [_, code] = window.location.href.split(\"code=\");\r\n    verifyEmail({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-52 flex flex-col items-center justify-center\">\r\n      <Helmet>\r\n        <title>Verify Email | Uber Eats</title>\r\n      </Helmet>\r\n      <h2 className=\"text-lg mb-1 font-medium\">Confirming email...</h2>\r\n      <h4 className=\"text-gray-700 text-sm\">\r\n        Please wait, don't close this page.\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["139","140"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../../components/button\";\r\nimport { useMe } from \"../../hooks/useMe\";\r\nimport {\r\n  editProfile,\r\n  editProfileVariables,\r\n} from \"../../__generated__/editProfile\";\r\n\r\nconst EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile($input: EditProfileInput!) {\r\n    editProfile(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  email?: string;\r\n  password?: string;\r\n}\r\n\r\nexport const EditProfile = () => {\r\n  const { data: userData } = useMe();\r\n  const client = useApolloClient();\r\n  const onCompleted = (data: editProfile) => {\r\n    const {\r\n      editProfile: { ok },\r\n    } = data;\r\n    if (ok && userData) {\r\n      const {\r\n        me: { email: prevEmail, id },\r\n      } = userData;\r\n      const { email: newEmail } = getValues();\r\n      if (prevEmail !== newEmail) {\r\n        client.writeFragment({\r\n          id: `User:${id}`,\r\n          fragment: gql`\r\n            fragment EditedUser on User {\r\n              verified\r\n              email\r\n            }\r\n          `,\r\n          data: {\r\n            email: newEmail,\r\n            verified: false,\r\n          },\r\n        });\r\n        //  history.push(\"/\");\r\n      }\r\n    }\r\n  };\r\n  const [editProfile, { loading }] = useMutation<\r\n    editProfile,\r\n    editProfileVariables\r\n  >(EDIT_PROFILE_MUTATION, { onCompleted });\r\n  const { register, handleSubmit, getValues, formState } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      email: userData?.me.email,\r\n    },\r\n  });\r\n  const onSubmit = () => {\r\n    const { email, password } = getValues();\r\n    editProfile({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          ...(password !== \"\" && { password }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"mt-52 flex flex-col justify-center items-center\">\r\n      <Helmet>\r\n        <title>Edit Profile | Uber Eats</title>\r\n      </Helmet>\r\n      <h4 className=\"font-semibold text-2xl mb-3\">Edit Profile</h4>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className=\"grid max-w-screen-sm gap-3 mt-5 w-full mb-5\"\r\n      >\r\n        <input\r\n          ref={register({\r\n            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n          })}\r\n          name=\"email\"\r\n          className=\"input\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          ref={register}\r\n          name=\"password\"\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <Button\r\n          loading={loading}\r\n          canClick={formState.isValid}\r\n          actionText=\"Save Profile\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx",["141","142","143","144"],"import { gql, useLazyQuery } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  searchRestaurant,\r\n  searchRestaurantVariables,\r\n} from \"../../__generated__/searchRestaurant\";\r\n\r\nconst SEARCH_RESTAURANT = gql`\r\n  query searchRestaurant($input: SearchRestaurantInput!) {\r\n    searchRestaurant(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\nexport const Search = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [callQuery, { loading, data }] = useLazyQuery<\r\n    searchRestaurant,\r\n    searchRestaurantVariables\r\n  >(SEARCH_RESTAURANT);\r\n  useEffect(() => {\r\n    const [_, query] = location.search.split(\"?term=\");\r\n    if (!query) {\r\n      return history.replace(\"/\");\r\n    }\r\n    callQuery({\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          query,\r\n        },\r\n      },\r\n    });\r\n  }, [history, location]);\r\n  return (\r\n    <h1>\r\n      <Helmet>\r\n        <title>Home | Uber Eats</title>\r\n      </Helmet>\r\n      Search Page\r\n    </h1>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\fragments.ts",[],["145","146"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\category.tsx",["147"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { CATEGORY_FRAGMENT, RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport { category, categoryVariables } from \"../../__generated__/category\";\r\n\r\nconst CATEGORY_QUERY = gql`\r\n  query category($input: CategoryInput!) {\r\n    category(input: $input) {\r\n      ok\r\n      error\r\n      totalPages\r\n      totalResults\r\n      restaurants {\r\n        ...RestaurantParts\r\n      }\r\n      category {\r\n        ...CategoryParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n  ${CATEGORY_FRAGMENT}\r\n`;\r\n\r\ninterface ICategoryParams {\r\n  slug: string;\r\n}\r\n\r\nexport const Category = () => {\r\n  const params = useParams<ICategoryParams>();\r\n  const { data, loading } = useQuery<category, categoryVariables>(\r\n    CATEGORY_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          page: 1,\r\n          slug: params.slug,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  console.log(data);\r\n  return <h1>Category</h1>;\r\n};\r\n",["148","149"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurant.tsx",["150"],"import { gql, useQuery } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\r\nimport {\r\n  restaurant,\r\n  restaurantVariables,\r\n} from \"../../__generated__/restaurant\";\r\n\r\nconst RESTAURANT_QUERY = gql`\r\n  query restaurant($input: RestaurantInput!) {\r\n    restaurant(input: $input) {\r\n      ok\r\n      error\r\n      restaurant {\r\n        ...RestaurantParts\r\n      }\r\n    }\r\n  }\r\n  ${RESTAURANT_FRAGMENT}\r\n`;\r\n\r\ninterface IRestaurantParams {\r\n  id: string;\r\n}\r\n\r\nexport const Restaurant = () => {\r\n  const params = useParams<IRestaurantParams>();\r\n  const { loading, data } = useQuery<restaurant, restaurantVariables>(\r\n    RESTAURANT_QUERY,\r\n    {\r\n      variables: {\r\n        input: {\r\n          restaurantId: +params.id,\r\n        },\r\n      },\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"bg-gray-800 py-48 bg-center bg-cover\"\r\n        style={{\r\n          backgroundImage: `url(${data?.restaurant.restaurant?.coverImg})`,\r\n        }}\r\n      >\r\n        <div className=\"bg-white w-3/12 py-8 pl-48\">\r\n          <h4 className=\"text-4xl mb-3\">{data?.restaurant.restaurant?.name}</h4>\r\n          <h5 className=\"text-sm font-light mb-2\">\r\n            {data?.restaurant.restaurant?.category?.name}\r\n          </h5>\r\n          <h6 className=\"text-sm font-light\">\r\n            {data?.restaurant.restaurant?.address}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\app.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\owner\\my-restaurants.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\owner\\add-restaurants.tsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"151","replacedBy":"157"},{"ruleId":"153","replacedBy":"158"},{"ruleId":"151","replacedBy":"159"},{"ruleId":"153","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":84,"column":34,"nodeType":"163","messageId":"164","endLine":84,"endColumn":35,"suggestions":"165"},{"ruleId":"161","severity":1,"message":"162","line":84,"column":59,"nodeType":"163","messageId":"164","endLine":84,"endColumn":60,"suggestions":"166"},{"ruleId":"151","replacedBy":"167"},{"ruleId":"153","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":34,"column":5,"nodeType":"171","messageId":"172","endLine":34,"endColumn":10},{"ruleId":"169","severity":1,"message":"173","line":46,"column":28,"nodeType":"171","messageId":"172","endLine":46,"endColumn":33},{"ruleId":"161","severity":1,"message":"162","line":87,"column":34,"nodeType":"163","messageId":"164","endLine":87,"endColumn":35,"suggestions":"174"},{"ruleId":"161","severity":1,"message":"162","line":87,"column":59,"nodeType":"163","messageId":"164","endLine":87,"endColumn":60,"suggestions":"175"},{"ruleId":"151","replacedBy":"176"},{"ruleId":"153","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":14,"column":3,"nodeType":"180","endLine":21,"endColumn":4},{"ruleId":"169","severity":1,"message":"181","line":48,"column":12,"nodeType":"171","messageId":"172","endLine":48,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":56,"column":6,"nodeType":"184","endLine":56,"endColumn":8,"suggestions":"185"},{"ruleId":"161","severity":1,"message":"162","line":89,"column":32,"nodeType":"163","messageId":"164","endLine":89,"endColumn":33,"suggestions":"186"},{"ruleId":"161","severity":1,"message":"162","line":89,"column":57,"nodeType":"163","messageId":"164","endLine":89,"endColumn":58,"suggestions":"187"},{"ruleId":"169","severity":1,"message":"188","line":29,"column":23,"nodeType":"171","messageId":"172","endLine":29,"endColumn":30},{"ruleId":"169","severity":1,"message":"189","line":29,"column":32,"nodeType":"171","messageId":"172","endLine":29,"endColumn":36},{"ruleId":"169","severity":1,"message":"181","line":34,"column":12,"nodeType":"171","messageId":"172","endLine":34,"endColumn":13},{"ruleId":"182","severity":1,"message":"190","line":46,"column":6,"nodeType":"184","endLine":46,"endColumn":25,"suggestions":"191"},{"ruleId":"151","replacedBy":"192"},{"ruleId":"153","replacedBy":"193"},{"ruleId":"169","severity":1,"message":"188","line":32,"column":17,"nodeType":"171","messageId":"172","endLine":32,"endColumn":24},{"ruleId":"151","replacedBy":"194"},{"ruleId":"153","replacedBy":"195"},{"ruleId":"169","severity":1,"message":"188","line":29,"column":11,"nodeType":"171","messageId":"172","endLine":29,"endColumn":18},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],["196"],["197"],["196"],["197"],["196"],["197"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["198","199"],["200","201"],["196"],["197"],"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["202","203"],["204","205"],["196"],["197"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["206"],["207","208"],["209","210"],"'loading' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callQuery'. Either include it or remove the dependency array.",["211"],["196"],["197"],["196"],["197"],"no-global-assign","no-unsafe-negation",{"messageId":"212","fix":"213","desc":"214"},{"messageId":"215","fix":"216","desc":"217"},{"messageId":"212","fix":"218","desc":"214"},{"messageId":"215","fix":"219","desc":"217"},{"messageId":"212","fix":"220","desc":"214"},{"messageId":"215","fix":"221","desc":"217"},{"messageId":"212","fix":"222","desc":"214"},{"messageId":"215","fix":"223","desc":"217"},{"desc":"224","fix":"225"},{"messageId":"212","fix":"226","desc":"214"},{"messageId":"215","fix":"227","desc":"217"},{"messageId":"212","fix":"228","desc":"214"},{"messageId":"215","fix":"229","desc":"217"},{"desc":"230","fix":"231"},"removeEscape",{"range":"232","text":"233"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"234","text":"235"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"236","text":"233"},{"range":"237","text":"235"},{"range":"238","text":"233"},{"range":"239","text":"235"},{"range":"240","text":"233"},{"range":"241","text":"235"},"Update the dependencies array to be: [verifyEmail]",{"range":"242","text":"243"},{"range":"244","text":"233"},{"range":"245","text":"235"},{"range":"246","text":"233"},{"range":"247","text":"235"},"Update the dependencies array to be: [callQuery, history, location]",{"range":"248","text":"249"},[2285,2286],"",[2285,2285],"\\",[2310,2311],[2310,2310],[2511,2512],[2511,2511],[2536,2537],[2536,2536],[1396,1398],"[verifyEmail]",[2363,2364],[2363,2363],[2388,2389],[2388,2388],[1167,1186],"[callQuery, history, location]"]