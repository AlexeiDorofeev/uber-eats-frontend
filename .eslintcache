[{"C:\\devel\\uber eat\\uber-eats-frontend\\src\\App.tsx":"1","C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx":"2","C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts":"3","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx":"4","C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts":"5","C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx":"7","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx":"8","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx":"9","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx":"10","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\loginMutation.ts":"11","C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts":"12","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx":"13","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx":"14","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx":"15","C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx":"16","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx":"17","C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts":"18","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx":"19","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx":"20","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx":"21"},{"size":413,"mtime":1608839931699,"results":"22","hashOfConfig":"23"},{"size":755,"mtime":1608922052229,"results":"24","hashOfConfig":"23"},{"size":425,"mtime":1608824550492,"results":"25","hashOfConfig":"23"},{"size":588,"mtime":1608929267108,"results":"26","hashOfConfig":"23"},{"size":1026,"mtime":1608927178432,"results":"27","hashOfConfig":"23"},{"size":1293,"mtime":1609073664424,"results":"28","hashOfConfig":"23"},{"size":3893,"mtime":1608921961020,"results":"29","hashOfConfig":"23"},{"size":4409,"mtime":1608928779108,"results":"30","hashOfConfig":"23"},{"size":238,"mtime":1608852300838,"results":"31","hashOfConfig":"23"},{"size":514,"mtime":1608894062481,"results":"32","hashOfConfig":"23"},{"size":597,"mtime":1608893931492,"results":"33","hashOfConfig":"23"},{"size":916,"mtime":1608996000035,"results":"34","hashOfConfig":"23"},{"size":4154,"mtime":1609077917671,"results":"35","hashOfConfig":"23"},{"size":600,"mtime":1608995256826,"results":"36","hashOfConfig":"23"},{"size":1041,"mtime":1608988055009,"results":"37","hashOfConfig":"23"},{"size":298,"mtime":1608933786460,"results":"38","hashOfConfig":"23"},{"size":1766,"mtime":1608995285615,"results":"39","hashOfConfig":"23"},{"size":44,"mtime":1608921491735,"results":"40","hashOfConfig":"23"},{"size":2986,"mtime":1608995300885,"results":"41","hashOfConfig":"23"},{"size":592,"mtime":1609063847776,"results":"42","hashOfConfig":"23"},{"size":256,"mtime":1609073614394,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"18vmfy9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\devel\\uber eat\\uber-eats-frontend\\src\\App.tsx",[],["91","92"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\index.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\reportWebVitals.ts",[],["93","94"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\apollo.ts",[],["95","96"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\login.tsx",["97","98"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { authToken, isLoggedInVar } from \"../apollo\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport { LOCALSTORAGE_TOKEN } from \"../constants\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation loginMutation($loginInput: Logininput!) {\r\n    login(input: $loginInput) {\r\n      ok\r\n      token\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport const Login = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ILoginForm>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const onCompleted = (data: loginMutation) => {\r\n    const {\r\n      login: { ok, token },\r\n    } = data;\r\n    if (ok && token) {\r\n      localStorage.setItem(LOCALSTORAGE_TOKEN, token);\r\n      authToken(token);\r\n      isLoggedInVar(true);\r\n    }\r\n  };\r\n\r\n  const [loginMutation, { data: loginMutationResult, loading }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password } = getValues();\r\n      loginMutation({\r\n        variables: { loginInput: { email, password } },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>Login | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Welcome back\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Login\"}\r\n          />\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult.login.error} />\r\n          )}\r\n        </form>\r\n        <div>\r\n          New to Uber?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/create-account\">\r\n            Create an Account\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\create-account.tsx",["99","100","101","102"],"import { gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"../components/button\";\r\nimport { FormError } from \"../components/form-error\";\r\nimport uberLogo from \"../images/1.svg\";\r\nimport {\r\n  createAccountMutation,\r\n  createAccountMutationVariables,\r\n} from \"../__generated__/createAccountMutation\";\r\nimport { UserRole } from \"../__generated__/globalTypes\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccountMutation($createAccountInput: CreateAccountInput!) {\r\n    createAccount(input: $createAccountInput) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ICreateAccountForm {\r\n  email: string;\r\n  password: string;\r\n  role: UserRole;\r\n}\r\n\r\nexport const CreateAccount = () => {\r\n  const {\r\n    register,\r\n    getValues,\r\n    watch,\r\n    errors,\r\n    handleSubmit,\r\n    formState,\r\n  } = useForm<ICreateAccountForm>({\r\n    mode: \"onChange\",\r\n    defaultValues: { role: UserRole.Client },\r\n  });\r\n\r\n  const history = useHistory();\r\n  const onCompleted = (data: createAccountMutation) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n    if (ok) {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [\r\n    createAccountMutation,\r\n    { loading, data: createAccountMutationResult },\r\n  ] = useMutation<createAccountMutation, createAccountMutationVariables>(\r\n    CREATE_ACCOUNT_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const onSubmit = () => {\r\n    if (!loading) {\r\n      const { email, password, role } = getValues();\r\n      createAccountMutation({\r\n        variables: { createAccountInput: { email, password, role } },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center flex-col mt-10 lg:mt-28\">\r\n      <Helmet>\r\n        <title>CreateAccount | Uber Eats</title>\r\n      </Helmet>\r\n      <div className=\"w-full max-w-screen-sm flex flex-col px-5 items-center\">\r\n        <img src={uberLogo} className=\"w-52 mb-5\" alt=\"Uber Eats Logo\" />\r\n        <h4 className=\"w-full font-medium text-left text-2xl mb-5\">\r\n          Let's get started\r\n        </h4>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 w-full mb-5\"\r\n        >\r\n          <input\r\n            ref={register({\r\n              required: \"Email is required\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email.message} />\r\n          )}\r\n          {errors.email?.type === \"pattern\" && (\r\n            <FormError errorMessage={\"Please enter a valid email\"} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\" })}\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password.message} />\r\n          )}\r\n          <select\r\n            name=\"role\"\r\n            ref={register({ required: true })}\r\n            className=\"input\"\r\n          >\r\n            {Object.keys(UserRole).map((role, index) => (\r\n              <option key={index}>{role}</option>\r\n            ))}\r\n          </select>\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\" Password must be more than 10 charachters\" />\r\n          )}\r\n          <Button\r\n            canClick={formState.isValid}\r\n            loading={loading}\r\n            actionText={\"Create Account\"}\r\n          />\r\n          {createAccountMutationResult?.createAccount.error && (\r\n            <FormError\r\n              errorMessage={createAccountMutationResult.createAccount.error}\r\n            />\r\n          )}\r\n        </form>\r\n        <div>\r\n          Already have an account?{\" \"}\r\n          <Link className=\"text-lime-600 hover:underline\" to=\"/\">\r\n            Login now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\form-error.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\button.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\loginMutation.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\__generated__\\globalTypes.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\restaurants.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\404.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\header.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\hooks\\useMe.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\confirm-email.tsx",["103","104"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\constants.ts",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\user\\edit-profile.tsx",["105","106"],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\components\\restaurant.tsx",[],"C:\\devel\\uber eat\\uber-eats-frontend\\src\\pages\\client\\search.tsx",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"108","replacedBy":"112"},{"ruleId":"110","replacedBy":"113"},{"ruleId":"108","replacedBy":"114"},{"ruleId":"110","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":84,"column":34,"nodeType":"118","messageId":"119","endLine":84,"endColumn":35,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":84,"column":59,"nodeType":"118","messageId":"119","endLine":84,"endColumn":60,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":34,"column":5,"nodeType":"124","messageId":"125","endLine":34,"endColumn":10},{"ruleId":"122","severity":1,"message":"126","line":46,"column":28,"nodeType":"124","messageId":"125","endLine":46,"endColumn":33},{"ruleId":"116","severity":1,"message":"117","line":86,"column":34,"nodeType":"118","messageId":"119","endLine":86,"endColumn":35,"suggestions":"127"},{"ruleId":"116","severity":1,"message":"117","line":86,"column":59,"nodeType":"118","messageId":"119","endLine":86,"endColumn":60,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":48,"column":12,"nodeType":"124","messageId":"125","endLine":48,"endColumn":13},{"ruleId":"130","severity":1,"message":"131","line":56,"column":6,"nodeType":"132","endLine":56,"endColumn":8,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"117","line":89,"column":32,"nodeType":"118","messageId":"119","endLine":89,"endColumn":33,"suggestions":"134"},{"ruleId":"116","severity":1,"message":"117","line":89,"column":57,"nodeType":"118","messageId":"119","endLine":89,"endColumn":58,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":8,"column":6,"nodeType":"132","endLine":8,"endColumn":8,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["140","141"],["142","143"],"@typescript-eslint/no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["144","145"],["146","147"],"'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.","ArrayExpression",["148"],["149","150"],["151","152"],"React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.",["153"],"no-global-assign","no-unsafe-negation",{"messageId":"154","fix":"155","desc":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"157","fix":"161","desc":"159"},{"messageId":"154","fix":"162","desc":"156"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"154","fix":"164","desc":"156"},{"messageId":"157","fix":"165","desc":"159"},{"desc":"166","fix":"167"},{"messageId":"154","fix":"168","desc":"156"},{"messageId":"157","fix":"169","desc":"159"},{"messageId":"154","fix":"170","desc":"156"},{"messageId":"157","fix":"171","desc":"159"},{"desc":"172","fix":"173"},"removeEscape",{"range":"174","text":"175"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"176","text":"177"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"178","text":"175"},{"range":"179","text":"177"},{"range":"180","text":"175"},{"range":"181","text":"177"},{"range":"182","text":"175"},{"range":"183","text":"177"},"Update the dependencies array to be: [verifyEmail]",{"range":"184","text":"185"},{"range":"186","text":"175"},{"range":"187","text":"177"},{"range":"188","text":"175"},{"range":"189","text":"177"},"Update the dependencies array to be: [location]",{"range":"190","text":"191"},[2285,2286],"",[2285,2285],"\\",[2310,2311],[2310,2310],[2458,2459],[2458,2458],[2483,2484],[2483,2483],[1396,1398],"[verifyEmail]",[2363,2364],[2363,2363],[2388,2389],[2388,2388],[214,216],"[location]"]